name: Google_V6

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build ADF Template
    runs-on: ubuntu-latest
    environment: dev    

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      # 3. Install npm packages
      - name: Install npm packages
        working-directory: ADF_Pipeline/Ingestion/build
        run: npm install

      # 4. Validate ADF resources
      - name: Validate ADF resources
        working-directory: ADF_Pipeline/Ingestion/build
        run: |
          npm run build validate ../../Ingestion \
            --resource-id "/subscriptions/3915c783-2b04-4f6f-94d4-8d3ac1d3deb5/resourceGroups/Ravi_RG/providers/Microsoft.DataFactory/factories/practiceadf20252025"

      # 5. Export ADF ARM template
      - name: Export ADF ARM template
        working-directory: ADF_Pipeline/Ingestion/build
        run: |
          npm run build export ../../Ingestion \
            --resource-id "/subscriptions/3915c783-2b04-4f6f-94d4-8d3ac1d3deb5/resourceGroups/Ravi_RG/providers/Microsoft.DataFactory/factories/practiceadf20252025" ExportedArmTemplate

      # 6. Upload ARM template artifact to Actions
      - name: Upload ARM template artifact
        uses: actions/upload-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ADF_Pipeline/Ingestion/build/ExportedArmTemplate

      # 7. Download artifact back
      - name: Download ARM template artifact
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ./arm-template

      # 8. Azure Login
      - name: Azure Login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      # # 9. Upload template to Blob Storage
      # - name: Upload Linked Templates to Storage Account
      #   run: |
      #     az storage blob upload --overwrite \
      #       --account-name "datalake31052025" \
      #       --container-name "xyz" \
      #       --name "ARMTemplateForFactory.json" \
      #       --file "./arm-template/ARMTemplateForFactory.json" \
      #       --auth-mode login

      # # 10. Generate Blob-level SAS Token
      # - name: Generate SAS Token
      #   id: generate_sas
      #   run: |
      #     STORAGE_ACCOUNT_NAME="datalake31052025"
      #     CONTAINER_NAME="data"
      #     BLOB_NAME="ARMTemplateForFactory.json"

      #     START=$(date -u -d "15 minutes ago" '+%Y-%m-%dT%H:%MZ')
      #     EXPIRY=$(date -u -d "2 hours" '+%Y-%m-%dT%H:%MZ')

      #     SAS_TOKEN=$(az storage blob generate-sas \
      #       --account-name $STORAGE_ACCOUNT_NAME \
      #       --container-name $CONTAINER_NAME \
      #       --name $BLOB_NAME \
      #       --permissions r \
      #       --start $START \
      #       --expiry $EXPIRY \
      #       --auth-mode login \
      #       --as-user \
      #       --output tsv)

      #     echo "sas_token=$SAS_TOKEN" >> $GITHUB_OUTPUT

      # # 11. Verify template is downloadable
      # - name: Verify template download
      #   run: |
      #     curl -I "https://datalake31052025.blob.core.windows.net/xyz/ARMTemplateForFactory.json?${{ steps.generate_sas.outputs.sas_token }}"

      # 12. Deploy ARM template from Blob Storage
      - name: Deployment ARM template from Blob Storage
        run: |
          az deployment group create \
            --resource-group "Ravi_RG" \
            --template-uri "https://datalake31052025.blob.core.windows.net/xyz/ARMTemplateForFactory.json?sp=racwdymeop&st=2025-08-25T15:37:05Z&se=2025-08-25T23:52:05Z&skoid=9ce8a53d-7b60-4096-8a1c-be4cd8d8c4cf&sktid=5f6ff5cb-7984-4efe-a3ef-6d2cfb07684a&skt=2025-08-25T15:37:05Z&ske=2025-08-25T23:52:05Z&sks=b&skv=2024-11-04&spr=https&sv=2024-11-04&sr=b&sig=KC8qD2a3QB5M5PrEYrM4X54d2FE2GiHbVPtI%2FBcQq2o%3D"